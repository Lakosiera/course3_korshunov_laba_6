services: # корневое имя параметра, в котором перечисляються все контенеры
  laba-6-db: # произвойльное имя контенера. на уровне файла конфигурации
    container_name: laba-6-db # указываем имя контенера для отобьражения в докере
    image: postgres:17-alpine # имя базового образа для запуска контенера (что то вроде имя дистрибутива операционной системы)
    volumes: # подключаем папку этого копьютера к папке внутри контенера (папка_на_компе:папка_внутри_коненера)
      - ./database-data/db:/var/lib/postgresql/data
    environment: # задаем свои параметры окружающей среды внутри контейнера (что то вроде глобальный переменных внутри ОС)
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports: # пробрасываем порт из контенера во вне. порт_компа:порт_внутри_контенера
      - "5432:5432" # только для разработки в других случаях убрать доступ к базе данных из вне

  laba-6-django: # произвойльное имя контенера. на уровне файла конфигурации 
    container_name: laba-6-django # указываем имя контенера для отобьражения в докере
    build: # сборка Dockerfile
      context: . # директория где проиходит сборка
    image: django_server # это имя будет использоваться для создания контенера на основе Dockerfile
    command: python manage.py runserver 0.0.0.0:8000 # команда сборки
    volumes: # подключаем локальную папку с кодом для сборки к папке контенера
      - ./server:/server
    ports: # пробрасываем порт из контенера во вне. порт_компа:порт_внутри_контенера
      - "8006:8000"
    depends_on: # указываем что этот контенера зависит от другого контенера
      - laba-6-db

  laba-6-swagger:
    container_name: laba-6-swagger
    image: swaggerapi/swagger-ui:latest
    volumes:
      - ./swagger/swagger.yml:/swagger.yml
      - ./swagger/django-proxy.conf:/etc/nginx/templates/default.conf.template
    environment:
      SWAGGER_JSON: /swagger.yml
    ports:
      - "8016:8080"